server:
  port: 9094
logging:
  config: "classpath:logback-local.xml"
no.nav.security.jwt:
  issuer:
    azuread:
      discoveryurl: http://localhost:${mock-oauth2-server.port}/azuread/.well-known/openid-configuration
      accepted_audience: aud-localhost
spring:
  kafka:
    bootstrap-servers: http://localhost:9092
    properties:
      schema.registry.url: http://localhost:8081
      security:
        protocol: PLAINTEXT
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: srvc01
      max-poll-records: 1
      auto-offset-reset: latest
      enable-auto-commit: false
arena-mq:
  queueManager: queuemanager
  channel: channel
  hostname: hostname
  port: 1234
  queueName: vedtakhendelserQueueName
  servicebruker: srvuser
  servicebrukerPassord: srvuserPassword

unleash:
  enabled: false

FAMILIE_OPPDRAG_API_URL: http://localhost:8087
FAMILIE_INTEGRASJONER_API_URL: http://localhost:9085
FAMILIE_TILBAKE_URL: http://localhost:8030
AZURE_OPENID_CONFIG_TOKEN_ENDPOINT: https://login.microsoftonline.com/navq.onmicrosoft.com/oauth2/v2.0/token

AZURE_APP_TENANT_ID: navq.onmicrosoft.com

NAIS_CLUSTER_NAME: dev

KAFKA_BROKERS: hostname:1234
KAFKA_KEYSTORE_PATH: kafkaKeystorePath
KAFKA_CREDSTORE_PASSWORD: kafkaCredstorePassword
KAFKA_TRUSTSTORE_PATH: kafkaTruststorePath
KAFKA_SCHEMA_REGISTRY: kafkaSchemaRegistry
KAFKA_SCHEMA_REGISTRY_USER: kafkaSchemaRegistryUser
KAFKA_SCHEMA_REGISTRY_PASSWORD: kafkaSchemaRegistryPassword

UNLEASH_SERVER_API_URL: http://localhost:4242/api
UNLEASH_SERVER_API_TOKEN: token
NAIS_APP_NAME: familie-ef-iverksett
NAIS_NAMESPACE: teamfamilie

AZURE_APP_CLIENT_ID: test-client-id
AZURE_APP_CLIENT_SECRET: test-client-secret
AZURE_APP_WELL_KNOWN_URL: https://login.microsoftonline.com/navq.onmicrosoft.com/v2.0/.well-known/openid-configuration
API_SCOPE: test