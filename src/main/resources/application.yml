application:
  name: familie-ef-iverksett
server:
  servlet:
    context-path: /
spring:
  main:
    allow-bean-definition-overriding: true
  flyway:
    enabled: true
  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/familie-ef-iverksett
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    hikari:
      maximum-pool-size: 20
      connection-test-query: "select 1"
      max-lifetime: 30000
      minimum-idle: 1
  application:
    name: iverksett
  jackson:
    mapper:
      accept-case-insensitive-properties: true
    deserialization:
      accept-single-value-as-array: true
      fail-on-unknown-properties: true
    serialization:
      write-empty-json-arrays: false
      fail-on-empty-beans: false
  kafka:
    bootstrap-servers: ${KAFKA_BROKERS}
    properties:
      security:
        protocol: SSL
      ssl:
        keystore:
          type: PKCS12
          location: ${KAFKA_KEYSTORE_PATH}
          password: ${KAFKA_CREDSTORE_PASSWORD}
        truststore:
          type: PKCS12
          location: ${KAFKA_TRUSTSTORE_PATH}
          password: ${KAFKA_CREDSTORE_PASSWORD}
    producer:
      acks: all
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: srvfamilie-ef-iverks
      max-poll-records: 1
      auto-offset-reset: latest
      enable-auto-commit: false
logging:
  config: "classpath:logback-spring.xml"

springdoc:
  packagesToScan: no.nav.familie.ef.iverksett
  pathsToMatch: /v3/api-docs,/api/**
  swagger-ui:
    disable-swagger-default-url: true

no.nav.security.jwt:
  issuer:
    azuread:
      discoveryurl: ${AZURE_APP_WELL_KNOWN_URL}
      accepted_audience: ${AZURE_APP_CLIENT_ID}
  client:
    registration:
      familie-oppdrag:
        resource-url: ${FAMILIE_OPPDRAG_API_URL}
        token-endpoint-url: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
        grant-type: client_credentials
        scope: ${FAMILIE_OPPDRAG_SCOPE}
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-secret: ${AZURE_APP_CLIENT_SECRET}
          client-auth-method: client_secret_basic
      familie-dokarkiv:
        resource-url: ${FAMILIE_INTEGRASJONER_API_URL}
        token-endpoint-url: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
        grant-type: client_credentials
        scope: ${FAMILIE_INTEGRASJONER_SCOPE}
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-secret: ${AZURE_APP_CLIENT_SECRET}
          client-auth-method: client_secret_basic
      infotrygd-feed:
        resource-url: ${INFOTRYGD_FEED_API_URL}
        token-endpoint-url: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
        grant-type: client_credentials
        scope: ${EF_INFOTRYGD_FEED_SCOPE}
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-secret: ${AZURE_APP_CLIENT_SECRET}
          client-auth-method: client_secret_basic
      familie-ef-tilbake-cc:
        resource-url: ${FAMILIE_TILBAKE_URL}
        token-endpoint-url: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
        grant-type: client_credentials
        scope: ${FAMILIE_TILBAKE_SCOPE}
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-secret: ${AZURE_APP_CLIENT_SECRET}
          client-auth-method: client_secret_basic
      familie-ef-tilbake-obo:
        resource-url: ${FAMILIE_TILBAKE_URL}
        token-endpoint-url: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
        grant-type: urn:ietf:params:oauth:grant-type:jwt-bearer
        scope: ${FAMILIE_TILBAKE_SCOPE}
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-secret: ${AZURE_APP_CLIENT_SECRET}
          client-auth-method: client_secret_basic

management:
  endpoint.health.show-details: always
  endpoints.web:
    exposure.include: info, health, metrics, prometheus, mappings
    base-path: "/internal"
    path-mapping:
      info: "isAlive"

arena-mq:
  queueManager: MPLS01
  channel: P_FAMILIE_EF_IVERKS
  hostname: mpls01.adeo.no
  port: 1414
  queueName: QA.P475.SOB_VEDTAKHENDELSER_ARE
  servicebruker: ${SERVICEBRUKER}
  servicebrukerPassord: ${SERVICEBRUKER_PASSORD}

funksjonsbrytere:
  enabled: true
  unleash:
    uri: https://unleash.nais.io/api/
    environment: ${NAIS_CLUSTER_NAME}
    applicationName: ${NAIS_APP_NAME}

DEPLOY_ENV: prod
FAMILIE_OPPDRAG_API_URL: https://familie-oppdrag.${DEPLOY_ENV}-fss-pub.nais.io
FAMILIE_OPPDRAG_SCOPE: api://${DEPLOY_ENV}-fss.teamfamilie.familie-oppdrag/.default
FAMILIE_INTEGRASJONER_API_URL: https://familie-integrasjoner.${DEPLOY_ENV}-fss-pub.nais.io
FAMILIE_INTEGRASJONER_SCOPE: api://${DEPLOY_ENV}-fss.teamfamilie.familie-integrasjoner/.default
INFOTRYGD_FEED_API_URL: https://familie-ef-infotrygd-feed.${DEPLOY_ENV}-fss-pub.nais.io
EF_INFOTRYGD_FEED_SCOPE: api://${DEPLOY_ENV}-fss.teamfamilie.familie-ef-infotrygd-feed/.default
FAMILIE_TILBAKE_URL: http://familie-tilbake
FAMILIE_TILBAKE_SCOPE: api://${DEPLOY_ENV}-gcp.teamfamilie.familie-tilbake/.default

ENSLIG_FORSORGER_VEDTAK_TOPIC: teamfamilie.aapen-ensligforsorger-vedtak-v1
ENSLIG_FORSORGER_BEHANDLING_TOPIC: teamfamilie.aapen-ensligforsorger-behandling-v1
ARBEIDSOPPFOLGING_VEDTAK_TOPIC: teamfamilie.aapen-ensligforsorger-vedtak-arbeidsoppfolging
VEDTAK_TOPIC: teamfamilie.aapen-ensligforsorger-iverksatt-vedtak
FAGSYSTEMBEHANDLING_RESPONS_TOPIC: teamfamilie.privat-tbk-hentfagsystemsbehandling-respons-topic

prosessering:
  continuousRunning.enabled: true
  fixedDelayString:
    in:
      milliseconds: 10000
  delete:
    after:
      weeks: 16