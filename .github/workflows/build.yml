name: Bygg og deploy

on:
  push:
    branches:
      - master         # Push events on master branch
env:
  IMAGE_BASE: docker.pkg.github.com/${{ github.repository }}/familie-ef-iverksett
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set cache key
        run: |
          echo "CACHE_KEY=$(expr $(date +%V) - 1 + 1)" >> $GITHUB_ENV
          echo "PREVIOUS_CACHE_KEY=$(expr $(date +%V) - 1)" >> $GITHUB_ENV
      - uses: actions/cache@v1.1.2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ env.CACHE_KEY }}
          restore-keys: |
            ${{ runner.os }}-maven-${{ env.PREVIOUS_CACHE_KEY }}
      - uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Build artifacts & deploy
        shell: bash
        run: |
          echo "Building artifacts $(echo $GITHUB_SHA | cut -c1-7)"
          mvn jacoco:prepare-agent deploy -e --quiet --batch-mode --settings ./.m2/settings.xml -Dmaven.wagon.http.pool=false -Dchangelist= -Dsha1=-$(date +%Y.%m.%d.%H%M%S)-$(echo $GITHUB_SHA | cut -c1-7) -Dfile.encoding=UTF-8 -DinstallAtEnd=true -DdeployAtEnd=true  -Djacoco.destFile=$(pwd)/target/jacoco.exec
          echo "MVN_VERSION=$(mvn help:evaluate --batch-mode --settings ./.m2/settings.xml --file .flattened -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
          echo "Deployed artifacts"
          echo "TAG=$(mvn help:evaluate --batch-mode --settings ./.m2/settings.xml --file .flattened -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
          echo "IMAGE=$IMAGE_BASE:$(mvn help:evaluate --batch-mode --settings ./.m2/settings.xml --file .flattened -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
        env:
          TZ: "Europe/Oslo"
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Bygg og push docker-image
        run: |
          docker build --pull --tag ${IMAGE} --tag ${IMAGE_BASE}:latest .
          echo "$GITHUB_TOKEN" | docker login --username "x-access-token" --password-stdin https://docker.pkg.github.com
          docker push ${IMAGE_BASE}:latest
          docker push $IMAGE

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.MVN_VERSION }}
          release_name: Release ${{ env.MVN_VERSION }}
          body: |
            Release built, docker image ${{ env.IMAGE }}

      - name: Opprett deployment issue
        if: success()
        uses: maxkomarychev/oction-create-issue@v0.7.1
        id: createdeployissue
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: Deploy av ${{ env.TAG }}
          labels: deployment
          body: |
            Kommenter med <b>/promote env</b>, hvor <b>env</b> er et gyldig clusternavn (dev-fss, prod-fss).
      - name: Trigg deploy til dev
        if: success()
        uses: peter-evans/create-or-update-comment@v1
        with:
          token: ${{ secrets.NOTIFICATION }}
          issue-number: ${{ steps.createdeployissue.outputs.number }}
          body: /promote dev-fss
